{erl_opts, [warn_unused_vars,warn_shadow_vars,warn_unused_import,
  warn_obsolete_guard,debug_info]}.
{edoc_opts, [{preprocess,true}]}.
{xref_checks, [undefined_function_calls,undefined_functions,locals_not_used,
  deprecated_function_calls,warnings_as_errors,
  deprecated_functions]}.
{cover_enabled, true}.
{cover_opts, [verbose]}.
{cover_export_enabled, true}.

{plugins, [rebar3_run]}.

{post_hooks, [ {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", compile, "./post-compile.sh"}
             , {"win32", compile, "post-compile.cmd"}]}.

  %%%==== Custom config ahead =====
  %% The following keys are not understood by rebar3
  %% but are translated as appropriate by rebar.config.script
  %%  - emqx_deps: Translates to {git, _, _} deps
  %% Note that relx.exclude_apps is understood by rebar3 directly
  %%%====       End note      =====

  %% NOTE: Order of the deps matters!
{emqx_deps,
  [ emqx
  , emqx_retainer
  , emqx_management
  , emqx_reloader
  , emqx_sn
  , emqx_coap
  , emqx_stomp
  , emqx_auth_clientid
  , emqx_auth_username
  , emqx_auth_http
  , emqx_auth_jwt
  , emqx_auth_mysql
  , emqx_web_hook
  , emqx_delayed_publish
  , emqx_recon
  , emqx_psk_file
  , emqx_rule_engine
  ]}.

  %% Additional deps from hex.pm or other sources may be added as usual under deps

{relx,
  [ {include_src,false}
  , {extended_start_script,false}
  , {generate_start_script,false}
  , {sys_config,false}
  , {vm_args,false}
  , {release, {emqx_base, {cmd, "git describe --tag --match 'v*' --dirty | tr -d '[:space:]'"}},
    [ kernel
    , sasl
    , crypto
    , public_key
    , asn1
    , syntax_tools
    , ssl
    , os_mon
    , inets
    , compiler
    , runtime_tools
    , gproc
    , esockd
    , clique
    , getopt
    , cuttlefish
    , jsx
    , cowboy
    , pbkdf2
    , bcrypt
    , mysql
    , emqx
    , {mnesia, load}
    , {ekka, load}
    , {emqx_sn, load}
    , {emqx_coap, load}
    , {emqx_recon, load}
    , {emqx_stomp, load}
    , {emqx_management, load}
    , {emqx_rule_engine, load}
    , {emqx_retainer, load}
    , {emqx_reloader, load}
    , {emqx_delayed_publish, load}
    , {emqx_web_hook, load}
    , {emqx_auth_clientid, load}
    , {emqx_auth_username, load}
    , {emqx_auth_http, load}
    , {emqx_auth_mysql, load}
    , {emqx_auth_jwt, load}
    , {emqx_psk_file, load}
    ]}
  , {overlay,
    [ {mkdir,"etc/"}
    , {mkdir,"log/"}
    , {mkdir,"data/"}
    , {mkdir,"data/mnesia"}
    , {mkdir,"data/configs"}
    , {mkdir,"data/scripts"}

    %% scripts in bin/
    , {template,"bin/emqx_env","bin/emqx_env"}
    , {template,"bin/emqx","bin/emqx"}
    , {template,"bin/emqx_ctl","bin/emqx_ctl"}
    , {template,"bin/emqx.cmd","bin/emqx.cmd"}
    , {template,"bin/emqx_ctl.cmd","bin/emqx_ctl.cmd"}
    , {copy,"bin/nodetool","bin/nodetool"}
    , {copy,"bin/install_upgrade_escript", "bin/install_upgrade_escript"}
    , {copy, "{{output_dir}}/../../lib/cuttlefish/cuttlefish","bin/"}

    , {template, "data/loaded_plugins.tmpl", "data/loaded_plugins"}


    , {template,"{{output_dir}}/../../conf/emqx.conf","etc/emqx.conf"}
    , {copy,"{{output_dir}}/../../conf/acl.conf","etc/acl.conf"}
    , {template,"{{output_dir}}/../../lib/emqx/etc/{{vm_args_file}}","etc/vm.args"}
    , {template,"{{output_dir}}/../../conf/ssl_dist.conf","etc/ssl_dist.conf"}

    , {copy,"{{output_dir}}/../../conf/plugins","etc/"}
    , {template,"{{output_dir}}/../../conf/plugins/emqx_coap.conf", "etc/plugins/emqx_coap.conf"}
    , {template,"{{output_dir}}/../../conf/plugins/emqx_psk_file.conf", "etc/plugins/emqx_psk_file.conf"}

    , {copy,"{{output_dir}}/../../conf/schema","releases/{{rel_vsn}}/"}

    , {copy, "{{output_dir}}/../../lib/emqx/etc/certs","etc/"}
    , {copy, "{{output_dir}}/../../lib/emqx_psk_file/etc/psk.txt", "etc/psk.txt"}

    ]}
  ]}.


{profiles,
  [ {dev_local,
    [ {relx,
      [ {dev_mode, true}
      , {include_erts, false}
      , {system_libs, false}
      ]}
    , {erl_opts, [debug_info]}
    ]}
  , {cloud,
    [ {emqx_deps,
      [ emqx_lwm2m
      , emqx_auth_ldap
      , emqx_auth_pgsql
      , emqx_auth_redis
      , emqx_auth_mongo
      , emqx_lua_hook
      , emqx_dashboard
      , emqx_statsd
      ]}
    , {relx,
      [ {release, {emqx, {cmd, "git describe --tag --match 'v*' --dirty | tr -d '[:space:]'"}, {extend, emqx_base}},
        [ {emqx_lwm2m, load}
        , {emqx_auth_ldap, load}
        , {emqx_auth_pgsql, load}
        , {emqx_auth_redis, load}
        , {emqx_auth_mongo, load}
        , {emqx_lua_hook, load}
        , {emqx_dashboard, load}
        , {emqx_statsd, load}
        , {observer,load}
        , luerl
        , xmerl
        ]
      }
      , {overlay,
        [ {template,"{{output_dir}}/../../conf/plugins/emqx_lwm2m.conf", "etc/plugins/emqx_lwm2m.conf"}
        , {copy,"{{output_dir}}/../../lib/emqx_lwm2m/lwm2m_xml","etc/"}
        ]
      }
      , {overlay_vars, ["vars-cloud.config"]}
      , {default_release, {emqx, {cmd, "git describe --tag --match 'v*' --dirty | tr -d '[:space:]'"}}}
      ]}
    ]}
  , {edge,
    [ {emqx_deps, [ emqx_cube ]}
    , {relx,
      [ {release, {emqx, {cmd, "git describe --tag --match 'v*' --dirty | tr -d '[:space:]'"}, {extend, emqx_base}},
        [{emqx_cube, load}]}
      , {overlay_vars, ["vars-edge.config"]}
      , {default_release, {emqx, {cmd, "git describe --tag --match 'v*' --dirty | tr -d '[:space:]'"}}}
      ]}
    ]}
  , {pkg, [{relx, [{overlay_vars, "vars-pkg.config"}]}]}
  , {dev, [{relx, [{overlay_vars, ["vars-dev.config"]}]}]}
  , {win32, [{relx, [{exclude_apps, [bcrypt]}]}]}
  ]}.
